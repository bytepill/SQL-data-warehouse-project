/* =====================================================================
   ðŸš€ DATA WAREHOUSE PROJECT - BRONZE LAYER LOADING SCRIPT
   =====================================================================

   This script loads raw CRM/ERP CSV data into Bronze Layer tables
   using BULK INSERT with staging for product info.

   - The Bronze Layer stores **raw ingested data** from source systems.
   - For most tables, I directly BULK INSERT data after truncating.
   - For `crm_prd_info`, additional steps are required:
       1. Create a **staging table** (all NVARCHAR) to handle CSV load safely.
       2. BULK INSERT into staging (avoids schema mismatch errors).
       3. Clean & transform data (CAST to proper types, date conversion).
       4. Insert into the final `bronze.crm_prd_info` table.
   - This ensures data integrity (no invalid dates, numeric values handled).
   - Truncate â†’ Load â†’ Clean â†’ Insert is repeatable without duplication.
   ===================================================================== */

/* ==========================================================
   STEP 0: Direct BULK INSERT for Simple Tables
   ----------------------------------------------------------
   - These tables have clean data and do not need staging.
   ========================================================== */

-- Customer Info
TRUNCATE TABLE bronze.crm_cust_info;
BULK INSERT bronze.crm_cust_info
FROM 'C:\Users\arpan\OneDrive\Desktop\ARPAN\SQL\PROJECTS\sql-data-warehouse-project\datasets\source_crm\cust_info.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    TABLOCK
);

-- Sales Details
TRUNCATE TABLE bronze.crm_sales_details;
BULK INSERT bronze.crm_sales_details
FROM 'C:\Users\arpan\OneDrive\Desktop\ARPAN\SQL\PROJECTS\sql-data-warehouse-project\datasets\source_crm\sales_details.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    TABLOCK
);

-- ERP Location
TRUNCATE TABLE bronze.erp_loc_a101;
BULK INSERT bronze.erp_loc_a101
FROM 'C:\Users\arpan\OneDrive\Desktop\ARPAN\SQL\PROJECTS\sql-data-warehouse-project\datasets\source_erp\loc_a101.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    TABLOCK
);

-- ERP Customer
TRUNCATE TABLE bronze.erp_cust_az12;
BULK INSERT bronze.erp_cust_az12
FROM 'C:\Users\arpan\OneDrive\Desktop\ARPAN\SQL\PROJECTS\sql-data-warehouse-project\datasets\source_erp\cust_az12.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    TABLOCK
);

-- ERP Product Category
TRUNCATE TABLE bronze.erp_px_cat_g1v2;
BULK INSERT bronze.erp_px_cat_g1v2
FROM 'C:\Users\arpan\OneDrive\Desktop\ARPAN\SQL\PROJECTS\sql-data-warehouse-project\datasets\source_erp\px_cat_g1v2.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    TABLOCK
);


/* ==========================================================
   STEP 1: Create Staging Table for Product Info
   ----------------------------------------------------------
   - All columns NVARCHAR â†’ ensures BULK INSERT never fails.
   - Handles raw product data (including messy dates/costs).
   ========================================================== */
CREATE TABLE bronze.crm_prd_info_stg (
    prd_id NVARCHAR(50),
    prd_key NVARCHAR(50),
    prd_nm NVARCHAR(50),
    prd_cost NVARCHAR(50),
    prd_line NVARCHAR(50),
    prd_start_dt NVARCHAR(50),
    prd_end_dt NVARCHAR(50)
);


/* ==========================================================
   STEP 2: Bulk Insert Raw Data into Staging
   ----------------------------------------------------------
   - FIRSTROW = 2 skips header row.
   - ROWTERMINATOR = '\n' ensures proper row breaks.
   ========================================================== */
BULK INSERT bronze.crm_prd_info_stg
FROM 'C:\Users\arpan\OneDrive\Desktop\ARPAN\SQL\PROJECTS\sql-data-warehouse-project\datasets\source_crm\prd_info.csv'
WITH (
    FIRSTROW = 2,
    FIELDTERMINATOR = ',',
    ROWTERMINATOR = '\n',
    TABLOCK
);


/* ==========================================================
   STEP 3: Truncate Final Product Table
   ----------------------------------------------------------
   - Ensures no duplicates when re-running the pipeline.
   ========================================================== */
TRUNCATE TABLE bronze.crm_prd_info;
GO


/* ==========================================================
   STEP 4: Insert Cleaned Data into Final Product Table
   ----------------------------------------------------------
   Final Schema:
   - prd_id        INT
   - prd_key       NVARCHAR(100)
   - prd_nm        NVARCHAR(100)
   - prd_cost      INT
   - prd_line      NVARCHAR(100)
   - prd_start_dt  DATETIME (from dd-mm-yyyy hh:mm:ss)
   - prd_end_dt    DATE (from dd-mm-yyyy)

   Cleaning Logic:
   - Convert prd_cost safely â†’ default 0 if invalid.
   - Convert dates using style 105 (dd-mm-yyyy).
   - Keep NULL if conversion fails.
   ========================================================== */
INSERT INTO bronze.crm_prd_info (
    prd_id,
    prd_key,
    prd_nm,
    prd_cost,
    prd_line,
    prd_start_dt,
    prd_end_dt
)
SELECT
    TRY_CAST(prd_id AS INT),                        -- convert ID to INT
    prd_key,                                        -- keep as NVARCHAR
    prd_nm,                                         -- keep as NVARCHAR
    ISNULL(TRY_CAST(prd_cost AS INT), 0),           -- handle invalid cost
    prd_line,                                       -- keep as NVARCHAR
    TRY_CONVERT(DATETIME, prd_start_dt, 105),       -- convert to datetime
    TRY_CONVERT(DATE, prd_end_dt, 105)              -- convert to date
FROM bronze.crm_prd_info_stg;


/* ==========================================================
   STEP 5: Validate & Debug (Optional)
   ----------------------------------------------------------
   - Identify rows with invalid IDs, costs, or dates.
   - Helps in debugging and improving data quality.
   ========================================================== */

-- Check invalid numeric fields
SELECT prd_id, prd_cost
FROM bronze.crm_prd_info_stg
WHERE (TRY_CAST(prd_id AS INT) IS NULL AND prd_id IS NOT NULL)
   OR (TRY_CAST(prd_cost AS INT) IS NULL AND prd_cost IS NOT NULL);

-- Check invalid date fields
SELECT prd_start_dt, prd_end_dt
FROM bronze.crm_prd_info_stg
WHERE (TRY_CONVERT(DATETIME, prd_start_dt, 105) IS NULL AND prd_start_dt IS NOT NULL)
   OR (TRY_CONVERT(DATE, prd_end_dt, 105) IS NULL AND prd_end_dt IS NOT NULL);
GO
